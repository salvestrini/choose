#
# choose.sh.in
#
# Copyright (C) 2008, 2009 Francesco Salvestrini
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

# Script variables
PROGRAM_NAME="choose"
PROGRAM_VERSION="@PACKAGE_VERSION@"

ME=$PROGRAM_NAME

INFILE=""
OUTFILE=""
RULESFILE=""
MODE=""
TOOLSPATH=""

WARNING=1
DEBUG=0
VERBISE=0

error ()
{
    echo "$ME: $1" >&2
}

warning ()
{
    if test $WARNING = 1; then
        echo "$ME: $1" >&2
    fi
}

debug ()
{
    if test $DEBUG = 1; then
        echo "$ME: $1" >&2
    fi
}

verbose ()
{
    if test $VERBOSE = 1; then
        echo "$ME: $1"
    fi
}

message ()
{
    echo "$ME: $1"
}

help ()
{
    echo "Usage: $PROGRAM_NAME [OPTIONS]"
    echo
    echo "Configure software interactively"
    echo
    echo "  -i <ARG>    Set input configuration file"
    echo "  -o <ARG>    Set output configuration file"
    echo "  -r <ARG>    Set rules file"
    echo "  -m <ARG>    Set mode"
    echo "  -w          Enable warnings output"
    echo "  -f          Warnings become fatal"
    echo "  -v          Enable verbose output"
    echo "  -d          Enable debugging"
    echo "  -V          Print program version"
    echo "  -h          Display this help and exit"
    echo
    echo "mode is one of: text, curses"
    echo
    echo "Report bugs to <@PACKAGE_BUGREPORT@>"
}

version ()
{
	echo "$PROGRAM_NAME (@PACKAGE_NAME@) @PACKAGE_VERSION@"
	echo ""
	echo "Copyright (C) 2008, 2009 Francesco Salvestrini"
	echo ""
	echo "This is free software.  You may redistribute copies of it under the terms of"
	echo "the GNU General Public License <http://www.gnu.org/licenses/gpl.html>."
	echo "There is NO WARRANTY, to the extent permitted by law."
}

hint ()
{
    echo "$ME: $1"
    echo "Try \`$PROGRAM_NAME -h' for more information."
}

#
# Main
#

# Getting options:
if test x"$*" = x"" ; then
    hint "Missing required options!"
    exit 1
fi

while true
  do
  debug "Handling \"$1\""
  case $1 in
      -i) shift ; INFILE=$1     ; debug "Got \"$1\"" ;;
      -o) shift ; OUTFILE=$1    ; debug "Got \"$1\"" ;;
      -r) shift ; RULESFILE=$1  ; debug "Got \"$1\"" ;;
      -m) shift ; MODE=$1       ; debug "Got \"$1\"" ;;
      -w) WARNING=1                                  ;;
      -f) FATAL=1                                    ;;
      -v) VERBOSE=1                                  ;;
      -d) DEBUG=1                                    ;;
      -h) help                      ; exit 0         ;;
      -V) version                   ; exit 0         ;;
      "") shift ; break                              ;;
      *)  hint "Wrong option '$1'!" ; exit 1         ;;
  esac
  shift
done

#
# Checks, checks, checks ...
#
if test x"$INFILE" = x"" ; then
    hint "Missing input configuration file"
    exit 1
fi
if test x"$OUTFILE" = x"" ; then
    hint "Missing output configuration file"
    exit 1
fi
if test x"$RULESFILE" = x"" ; then
    hint "Missing rules file"
    exit 1
fi
if test x"$MODE" = x"" ; then
    hint "Missing mode"
    exit 1
fi

case $MODE in
    text)    EXECUTABLE="@bindir@/choose-text"    ;;
    ncurses) EXECUTABLE="@bindir@/choose-ncurses" ;;
    *)      error "Unknown mode $MODE" ; exit 1 ;;
esac

if test ! -f "$EXECUTABLE" ; then
    error "Missing $EXECUTABLE file ..."
    exit 1
fi

debug "Input file:  $INFILE"
debug "Output file: $OUTFILE"
debug "Rules file:  $RULESFILE"
debug "Mode:        $MODE"

rm -f .config
rm -f .config.old

if test -f $INFILE ; then
    cp -f $INFILE .config
else
    warning "Missing $INFILE, starting from scratch ..."
    touch .config
fi
if test ! -f .config ; then
    error "Cannot create temp file ..."
    exit 1
fi

if test ! -f $RULESFILE ; then
    error "Cannot find $RULESFILE ..."
    exit 2
fi

$EXECUTABLE $RULESFILE || {
    error "Problems running $EXECUTABLE"
    rm -f .config
    rm -f .config.old
    exit 1
}

rm -f .config.old
mv .config $OUTFILE
if test ! -f $OUTFILE ; then
    error "Cannot write on $OUTFILE ..."
    rm -f .config
    exit 1
fi

debug "Configuration file $OUTFILE wrote successfully"

exit 0
